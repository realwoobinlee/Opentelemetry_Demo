{"@timestamp":"2020-11-11T13:08:25.879Z", "log.level": "INFO", "message":"Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests], using SpringBootContextLoader", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-11T13:08:25.899Z", "log.level": "INFO", "message":"Could not detect default resource locations for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.test.context.support.AbstractContextLoader"}
{"@timestamp":"2020-11-11T13:08:25.902Z", "log.level": "INFO", "message":"Could not detect default configuration classes for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests]: OpentelemetryDemoApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils"}
{"@timestamp":"2020-11-11T13:08:26.095Z", "log.level": "INFO", "message":"Found @SpringBootConfiguration com.itergo.Opentelemetry_demo.OpentelemetryDemoApplication for test class com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-11T13:08:26.287Z", "log.level": "INFO", "message":"Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-11T13:08:26.321Z", "log.level": "INFO", "message":"Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@57b75756, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5327a06e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2679311f, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@287f7811, org.springframework.test.context.support.DirtiesContextTestExecutionListener@451f87af, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2b556bb2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@44cb460e, org.springframework.test.context.event.EventPublishingTestExecutionListener@17271176, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2e3cdec2, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2e34384c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3051e0b2, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1f52eb6f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@57d0fc89, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@58294867]", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-11T13:08:26.721Z", "log.level": "INFO", "message":"Starting OpentelemetryDemoApplicationTests on LAPTOP-3TNF8G3D with PID 33052 (started by Woobin in C:\\Users\\Woobin Lee\\Desktop\\opentelemetry\\Opentelemetry_demo)", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-11T13:08:26.770Z", "log.level": "INFO", "message":"No active profile set, falling back to default profiles: default", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-11T13:08:27.613Z", "log.level": "INFO", "message":"Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-11T13:08:27.634Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 16ms. Found 0 Elasticsearch repository interfaces.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-11T13:08:27.641Z", "log.level": "INFO", "message":"Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-11T13:08:27.643Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 2ms. Found 0 Reactive Elasticsearch repository interfaces.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-11T13:08:28.747Z", "log.level": "INFO", "message":"Initializing ExecutorService 'applicationTaskExecutor'", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-11-11T13:08:30.063Z", "log.level": "WARN", "message":"Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-11T13:08:30.063Z", "log.level": "WARN", "message":"Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-11T13:08:30.064Z", "log.level": "WARN", "message":"Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-11T13:08:30.064Z", "log.level": "WARN", "message":"Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-11T13:08:31.219Z", "log.level": "INFO", "message":"Version Spring Data Elasticsearch: 4.0.4.RELEASE", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-11T13:08:31.219Z", "log.level": "INFO", "message":"Version Elasticsearch Client in build: 7.6.2", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-11T13:08:31.219Z", "log.level": "INFO", "message":"Version Elasticsearch Client used: 7.6.2", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-11T13:08:31.339Z", "log.level": "INFO", "message":"Started OpentelemetryDemoApplicationTests in 4.962 seconds (JVM running for 7.469)", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-11T13:08:32.214Z", "log.level": "INFO", "message":"Shutting down ExecutorService 'applicationTaskExecutor'", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"SpringContextShutdownHook","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-11-11T13:12:12.426Z", "log.level": "INFO", "message":"Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests], using SpringBootContextLoader", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-11T13:12:12.439Z", "log.level": "INFO", "message":"Could not detect default resource locations for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.test.context.support.AbstractContextLoader"}
{"@timestamp":"2020-11-11T13:12:12.440Z", "log.level": "INFO", "message":"Could not detect default configuration classes for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests]: OpentelemetryDemoApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils"}
{"@timestamp":"2020-11-11T13:12:12.586Z", "log.level": "INFO", "message":"Found @SpringBootConfiguration com.itergo.Opentelemetry_demo.OpentelemetryDemoApplication for test class com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-11T13:12:12.716Z", "log.level": "INFO", "message":"Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-11T13:12:12.739Z", "log.level": "INFO", "message":"Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@57b75756, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5327a06e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2679311f, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@287f7811, org.springframework.test.context.support.DirtiesContextTestExecutionListener@451f87af, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2b556bb2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@44cb460e, org.springframework.test.context.event.EventPublishingTestExecutionListener@17271176, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2e3cdec2, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2e34384c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3051e0b2, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1f52eb6f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@57d0fc89, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@58294867]", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-11T13:12:13.040Z", "log.level": "INFO", "message":"Starting OpentelemetryDemoApplicationTests on LAPTOP-3TNF8G3D with PID 23560 (started by Woobin in C:\\Users\\Woobin Lee\\Desktop\\opentelemetry\\Opentelemetry_demo)", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-11T13:12:13.083Z", "log.level": "INFO", "message":"No active profile set, falling back to default profiles: default", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-11T13:12:13.726Z", "log.level": "INFO", "message":"Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-11T13:12:13.747Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 16ms. Found 0 Elasticsearch repository interfaces.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-11T13:12:13.753Z", "log.level": "INFO", "message":"Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-11T13:12:13.756Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 2ms. Found 0 Reactive Elasticsearch repository interfaces.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-11T13:12:14.556Z", "log.level": "INFO", "message":"Initializing ExecutorService 'applicationTaskExecutor'", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-11-11T13:12:15.553Z", "log.level": "WARN", "message":"Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-11T13:12:15.553Z", "log.level": "WARN", "message":"Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-11T13:12:15.553Z", "log.level": "WARN", "message":"Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-11T13:12:15.554Z", "log.level": "WARN", "message":"Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-11T13:12:16.663Z", "log.level": "INFO", "message":"Version Spring Data Elasticsearch: 4.0.4.RELEASE", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-11T13:12:16.663Z", "log.level": "INFO", "message":"Version Elasticsearch Client in build: 7.6.2", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-11T13:12:16.663Z", "log.level": "INFO", "message":"Version Elasticsearch Client used: 7.6.2", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-11T13:12:16.750Z", "log.level": "INFO", "message":"Started OpentelemetryDemoApplicationTests in 3.957 seconds (JVM running for 5.702)", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-11T13:12:17.234Z", "log.level": "INFO", "message":"Shutting down ExecutorService 'applicationTaskExecutor'", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"SpringContextShutdownHook","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-11-12T07:54:19.477Z", "log.level": "INFO", "message":"Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests], using SpringBootContextLoader", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T07:54:19.514Z", "log.level": "INFO", "message":"Could not detect default resource locations for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.test.context.support.AbstractContextLoader"}
{"@timestamp":"2020-11-12T07:54:19.517Z", "log.level": "INFO", "message":"Could not detect default configuration classes for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests]: OpentelemetryDemoApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils"}
{"@timestamp":"2020-11-12T07:54:19.885Z", "log.level": "INFO", "message":"Found @SpringBootConfiguration com.itergo.Opentelemetry_demo.OpentelemetryDemoApplication for test class com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T07:54:20.230Z", "log.level": "INFO", "message":"Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T07:54:20.274Z", "log.level": "INFO", "message":"Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@57b75756, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5327a06e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2679311f, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@287f7811, org.springframework.test.context.support.DirtiesContextTestExecutionListener@451f87af, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2b556bb2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@44cb460e, org.springframework.test.context.event.EventPublishingTestExecutionListener@17271176, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2e3cdec2, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2e34384c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3051e0b2, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1f52eb6f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@57d0fc89, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@58294867]", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T07:54:20.952Z", "log.level": "INFO", "message":"Starting OpentelemetryDemoApplicationTests on LAPTOP-3TNF8G3D with PID 14352 (started by Woobin in C:\\Users\\Woobin Lee\\Desktop\\opentelemetry\\Opentelemetry_demo)", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T07:54:21.050Z", "log.level": "INFO", "message":"No active profile set, falling back to default profiles: default", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T07:54:22.584Z", "log.level": "INFO", "message":"Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T07:54:22.614Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 25ms. Found 0 Elasticsearch repository interfaces.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T07:54:22.626Z", "log.level": "INFO", "message":"Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T07:54:22.631Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 4ms. Found 0 Reactive Elasticsearch repository interfaces.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T07:54:24.566Z", "log.level": "INFO", "message":"Initializing ExecutorService 'applicationTaskExecutor'", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-11-12T07:54:26.519Z", "log.level": "WARN", "message":"Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T07:54:26.520Z", "log.level": "WARN", "message":"Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T07:54:26.521Z", "log.level": "WARN", "message":"Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T07:54:26.522Z", "log.level": "WARN", "message":"Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T07:54:26.799Z", "log.level": "INFO", "message":"Version Spring Data Elasticsearch: 4.0.4.RELEASE", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T07:54:26.799Z", "log.level": "INFO", "message":"Version Elasticsearch Client in build: 7.6.2", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T07:54:26.800Z", "log.level": "INFO", "message":"Version Elasticsearch Client used: 7.6.2", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T07:54:26.800Z", "log.level": "INFO", "message":"Version Elasticsearch cluster: 7.9.0", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T07:54:26.800Z", "log.level": "WARN", "message":"Version mismatch in between Elasticsearch Client and Cluster: 7.6.2 - 7.9.0", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T07:54:26.989Z", "log.level": "INFO", "message":"Started OpentelemetryDemoApplicationTests in 6.632 seconds (JVM running for 11.298)", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T07:54:28.124Z", "log.level": "INFO", "message":"Shutting down ExecutorService 'applicationTaskExecutor'", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"SpringContextShutdownHook","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-11-12T07:57:43.913Z", "log.level": "INFO", "message":"Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests], using SpringBootContextLoader", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T07:57:43.960Z", "log.level": "INFO", "message":"Could not detect default resource locations for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.test.context.support.AbstractContextLoader"}
{"@timestamp":"2020-11-12T07:57:43.962Z", "log.level": "INFO", "message":"Could not detect default configuration classes for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests]: OpentelemetryDemoApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils"}
{"@timestamp":"2020-11-12T07:57:44.330Z", "log.level": "INFO", "message":"Found @SpringBootConfiguration com.itergo.Opentelemetry_demo.OpentelemetryDemoApplication for test class com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T07:57:44.668Z", "log.level": "INFO", "message":"Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T07:57:44.715Z", "log.level": "INFO", "message":"Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@57b75756, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5327a06e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2679311f, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@287f7811, org.springframework.test.context.support.DirtiesContextTestExecutionListener@451f87af, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2b556bb2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@44cb460e, org.springframework.test.context.event.EventPublishingTestExecutionListener@17271176, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2e3cdec2, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2e34384c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3051e0b2, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1f52eb6f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@57d0fc89, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@58294867]", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T07:57:45.565Z", "log.level": "INFO", "message":"Starting OpentelemetryDemoApplicationTests on LAPTOP-3TNF8G3D with PID 28516 (started by Woobin in C:\\Users\\Woobin Lee\\Desktop\\opentelemetry\\Opentelemetry_demo)", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T07:57:45.659Z", "log.level": "INFO", "message":"No active profile set, falling back to default profiles: default", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T07:57:47.166Z", "log.level": "INFO", "message":"Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T07:57:47.215Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 37ms. Found 0 Elasticsearch repository interfaces.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T07:57:47.226Z", "log.level": "INFO", "message":"Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T07:57:47.233Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 5ms. Found 0 Reactive Elasticsearch repository interfaces.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T07:57:49.074Z", "log.level": "INFO", "message":"Initializing ExecutorService 'applicationTaskExecutor'", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-11-12T07:57:51.561Z", "log.level": "WARN", "message":"Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T07:57:51.562Z", "log.level": "WARN", "message":"Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T07:57:51.563Z", "log.level": "WARN", "message":"Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T07:57:51.563Z", "log.level": "WARN", "message":"Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T07:57:51.982Z", "log.level": "INFO", "message":"Version Spring Data Elasticsearch: 4.0.4.RELEASE", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T07:57:51.983Z", "log.level": "INFO", "message":"Version Elasticsearch Client in build: 7.6.2", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T07:57:51.983Z", "log.level": "INFO", "message":"Version Elasticsearch Client used: 7.6.2", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T07:57:51.984Z", "log.level": "INFO", "message":"Version Elasticsearch cluster: 7.9.0", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T07:57:51.984Z", "log.level": "WARN", "message":"Version mismatch in between Elasticsearch Client and Cluster: 7.6.2 - 7.9.0", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T07:57:52.210Z", "log.level": "INFO", "message":"Started OpentelemetryDemoApplicationTests in 7.364 seconds (JVM running for 11.876)", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T07:57:53.612Z", "log.level": "INFO", "message":"Shutting down ExecutorService 'applicationTaskExecutor'", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"SpringContextShutdownHook","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-11-12T08:07:46.229Z", "log.level": "INFO", "message":"Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests], using SpringBootContextLoader", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T08:07:46.273Z", "log.level": "INFO", "message":"Could not detect default resource locations for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.test.context.support.AbstractContextLoader"}
{"@timestamp":"2020-11-12T08:07:46.275Z", "log.level": "INFO", "message":"Could not detect default configuration classes for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests]: OpentelemetryDemoApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils"}
{"@timestamp":"2020-11-12T08:07:46.625Z", "log.level": "INFO", "message":"Found @SpringBootConfiguration com.itergo.Opentelemetry_demo.OpentelemetryDemoApplication for test class com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T08:07:47.045Z", "log.level": "INFO", "message":"Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T08:07:47.103Z", "log.level": "INFO", "message":"Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@57b75756, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5327a06e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2679311f, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@287f7811, org.springframework.test.context.support.DirtiesContextTestExecutionListener@451f87af, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2b556bb2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@44cb460e, org.springframework.test.context.event.EventPublishingTestExecutionListener@17271176, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2e3cdec2, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2e34384c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3051e0b2, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1f52eb6f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@57d0fc89, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@58294867]", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T08:07:47.819Z", "log.level": "INFO", "message":"Starting OpentelemetryDemoApplicationTests on LAPTOP-3TNF8G3D with PID 11244 (started by Woobin in C:\\Users\\Woobin Lee\\Desktop\\opentelemetry\\Opentelemetry_demo)", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T08:07:47.903Z", "log.level": "INFO", "message":"No active profile set, falling back to default profiles: default", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T08:07:49.360Z", "log.level": "INFO", "message":"Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T08:07:49.406Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 35ms. Found 0 Elasticsearch repository interfaces.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T08:07:49.420Z", "log.level": "INFO", "message":"Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T08:07:49.426Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 4ms. Found 0 Reactive Elasticsearch repository interfaces.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T08:07:51.310Z", "log.level": "INFO", "message":"Initializing ExecutorService 'applicationTaskExecutor'", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-11-12T08:07:53.821Z", "log.level": "WARN", "message":"Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T08:07:53.822Z", "log.level": "WARN", "message":"Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T08:07:53.824Z", "log.level": "WARN", "message":"Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T08:07:53.825Z", "log.level": "WARN", "message":"Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T08:07:54.257Z", "log.level": "INFO", "message":"Version Spring Data Elasticsearch: 4.0.4.RELEASE", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T08:07:54.258Z", "log.level": "INFO", "message":"Version Elasticsearch Client in build: 7.6.2", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T08:07:54.259Z", "log.level": "INFO", "message":"Version Elasticsearch Client used: 7.6.2", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T08:07:54.259Z", "log.level": "INFO", "message":"Version Elasticsearch cluster: 7.9.0", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T08:07:54.260Z", "log.level": "WARN", "message":"Version mismatch in between Elasticsearch Client and Cluster: 7.6.2 - 7.9.0", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T08:07:54.499Z", "log.level": "INFO", "message":"Started OpentelemetryDemoApplicationTests in 7.281 seconds (JVM running for 11.948)", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T08:07:55.607Z", "log.level": "INFO", "message":"Shutting down ExecutorService 'applicationTaskExecutor'", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"SpringContextShutdownHook","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-11-12T08:13:08.398Z", "log.level": "INFO", "message":"Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests], using SpringBootContextLoader", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T08:13:08.426Z", "log.level": "INFO", "message":"Could not detect default resource locations for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.test.context.support.AbstractContextLoader"}
{"@timestamp":"2020-11-12T08:13:08.428Z", "log.level": "INFO", "message":"Could not detect default configuration classes for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests]: OpentelemetryDemoApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils"}
{"@timestamp":"2020-11-12T08:13:08.751Z", "log.level": "INFO", "message":"Found @SpringBootConfiguration com.itergo.Opentelemetry_demo.OpentelemetryDemoApplication for test class com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T08:13:09.074Z", "log.level": "INFO", "message":"Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T08:13:09.125Z", "log.level": "INFO", "message":"Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@57b75756, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5327a06e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2679311f, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@287f7811, org.springframework.test.context.support.DirtiesContextTestExecutionListener@451f87af, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2b556bb2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@44cb460e, org.springframework.test.context.event.EventPublishingTestExecutionListener@17271176, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2e3cdec2, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2e34384c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3051e0b2, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1f52eb6f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@57d0fc89, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@58294867]", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T08:13:09.830Z", "log.level": "INFO", "message":"Starting OpentelemetryDemoApplicationTests on LAPTOP-3TNF8G3D with PID 30136 (started by Woobin in C:\\Users\\Woobin Lee\\Desktop\\opentelemetry\\Opentelemetry_demo)", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T08:13:09.925Z", "log.level": "INFO", "message":"No active profile set, falling back to default profiles: default", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T08:13:11.394Z", "log.level": "INFO", "message":"Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T08:13:11.441Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 36ms. Found 0 Elasticsearch repository interfaces.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T08:13:11.454Z", "log.level": "INFO", "message":"Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T08:13:11.461Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 6ms. Found 0 Reactive Elasticsearch repository interfaces.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T08:13:13.359Z", "log.level": "INFO", "message":"Initializing ExecutorService 'applicationTaskExecutor'", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-11-12T08:13:15.802Z", "log.level": "WARN", "message":"Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T08:13:15.803Z", "log.level": "WARN", "message":"Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T08:13:15.804Z", "log.level": "WARN", "message":"Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T08:13:15.805Z", "log.level": "WARN", "message":"Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T08:13:16.316Z", "log.level": "INFO", "message":"Version Spring Data Elasticsearch: 4.0.4.RELEASE", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T08:13:16.316Z", "log.level": "INFO", "message":"Version Elasticsearch Client in build: 7.6.2", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T08:13:16.317Z", "log.level": "INFO", "message":"Version Elasticsearch Client used: 7.6.2", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T08:13:16.318Z", "log.level": "INFO", "message":"Version Elasticsearch cluster: 7.9.0", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T08:13:16.318Z", "log.level": "WARN", "message":"Version mismatch in between Elasticsearch Client and Cluster: 7.6.2 - 7.9.0", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T08:13:16.544Z", "log.level": "INFO", "message":"Started OpentelemetryDemoApplicationTests in 7.317 seconds (JVM running for 11.798)", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T08:13:17.739Z", "log.level": "INFO", "message":"Shutting down ExecutorService 'applicationTaskExecutor'", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"SpringContextShutdownHook","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-11-12T08:17:28.054Z", "log.level": "INFO", "message":"Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests], using SpringBootContextLoader", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T08:17:28.083Z", "log.level": "INFO", "message":"Could not detect default resource locations for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.test.context.support.AbstractContextLoader"}
{"@timestamp":"2020-11-12T08:17:28.085Z", "log.level": "INFO", "message":"Could not detect default configuration classes for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests]: OpentelemetryDemoApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils"}
{"@timestamp":"2020-11-12T08:17:28.496Z", "log.level": "INFO", "message":"Found @SpringBootConfiguration com.itergo.Opentelemetry_demo.OpentelemetryDemoApplication for test class com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T08:17:28.824Z", "log.level": "INFO", "message":"Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T08:17:28.873Z", "log.level": "INFO", "message":"Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@57b75756, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5327a06e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2679311f, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@287f7811, org.springframework.test.context.support.DirtiesContextTestExecutionListener@451f87af, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2b556bb2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@44cb460e, org.springframework.test.context.event.EventPublishingTestExecutionListener@17271176, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2e3cdec2, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2e34384c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3051e0b2, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1f52eb6f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@57d0fc89, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@58294867]", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T08:17:29.530Z", "log.level": "INFO", "message":"Starting OpentelemetryDemoApplicationTests on LAPTOP-3TNF8G3D with PID 30056 (started by Woobin in C:\\Users\\Woobin Lee\\Desktop\\opentelemetry\\Opentelemetry_demo)", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T08:17:29.623Z", "log.level": "INFO", "message":"No active profile set, falling back to default profiles: default", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T08:17:31.108Z", "log.level": "INFO", "message":"Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T08:17:31.158Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 39ms. Found 0 Elasticsearch repository interfaces.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T08:17:31.172Z", "log.level": "INFO", "message":"Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T08:17:31.178Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 5ms. Found 0 Reactive Elasticsearch repository interfaces.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T08:17:32.957Z", "log.level": "INFO", "message":"Initializing ExecutorService 'applicationTaskExecutor'", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-11-12T08:17:35.446Z", "log.level": "WARN", "message":"Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T08:17:35.447Z", "log.level": "WARN", "message":"Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T08:17:35.448Z", "log.level": "WARN", "message":"Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T08:17:35.449Z", "log.level": "WARN", "message":"Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T08:17:35.844Z", "log.level": "INFO", "message":"Version Spring Data Elasticsearch: 4.0.4.RELEASE", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T08:17:35.844Z", "log.level": "INFO", "message":"Version Elasticsearch Client in build: 7.6.2", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T08:17:35.845Z", "log.level": "INFO", "message":"Version Elasticsearch Client used: 7.6.2", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T08:17:35.845Z", "log.level": "INFO", "message":"Version Elasticsearch cluster: 7.9.0", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T08:17:35.846Z", "log.level": "WARN", "message":"Version mismatch in between Elasticsearch Client and Cluster: 7.6.2 - 7.9.0", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T08:17:36.044Z", "log.level": "INFO", "message":"Started OpentelemetryDemoApplicationTests in 7.08 seconds (JVM running for 11.552)", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T08:17:37.268Z", "log.level": "INFO", "message":"Shutting down ExecutorService 'applicationTaskExecutor'", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"SpringContextShutdownHook","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-11-12T08:30:10.105Z", "log.level": "INFO", "message":"Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests], using SpringBootContextLoader", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T08:30:10.147Z", "log.level": "INFO", "message":"Could not detect default resource locations for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.test.context.support.AbstractContextLoader"}
{"@timestamp":"2020-11-12T08:30:10.151Z", "log.level": "INFO", "message":"Could not detect default configuration classes for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests]: OpentelemetryDemoApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils"}
{"@timestamp":"2020-11-12T08:30:10.553Z", "log.level": "INFO", "message":"Found @SpringBootConfiguration com.itergo.Opentelemetry_demo.OpentelemetryDemoApplication for test class com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T08:30:10.883Z", "log.level": "INFO", "message":"Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T08:30:10.933Z", "log.level": "INFO", "message":"Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@57b75756, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5327a06e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2679311f, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@287f7811, org.springframework.test.context.support.DirtiesContextTestExecutionListener@451f87af, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2b556bb2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@44cb460e, org.springframework.test.context.event.EventPublishingTestExecutionListener@17271176, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2e3cdec2, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2e34384c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3051e0b2, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1f52eb6f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@57d0fc89, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@58294867]", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T08:30:11.627Z", "log.level": "INFO", "message":"Starting OpentelemetryDemoApplicationTests on LAPTOP-3TNF8G3D with PID 21104 (started by Woobin in C:\\Users\\Woobin Lee\\Desktop\\opentelemetry\\Opentelemetry_demo)", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T08:30:11.718Z", "log.level": "INFO", "message":"No active profile set, falling back to default profiles: default", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T08:30:13.066Z", "log.level": "INFO", "message":"Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T08:30:13.111Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 35ms. Found 0 Elasticsearch repository interfaces.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T08:30:13.125Z", "log.level": "INFO", "message":"Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T08:30:13.134Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 8ms. Found 0 Reactive Elasticsearch repository interfaces.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T08:30:14.921Z", "log.level": "INFO", "message":"Initializing ExecutorService 'applicationTaskExecutor'", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-11-12T08:30:17.550Z", "log.level": "WARN", "message":"Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T08:30:17.551Z", "log.level": "WARN", "message":"Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T08:30:17.552Z", "log.level": "WARN", "message":"Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T08:30:17.553Z", "log.level": "WARN", "message":"Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T08:30:17.980Z", "log.level": "INFO", "message":"Version Spring Data Elasticsearch: 4.0.4.RELEASE", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T08:30:17.980Z", "log.level": "INFO", "message":"Version Elasticsearch Client in build: 7.6.2", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T08:30:17.981Z", "log.level": "INFO", "message":"Version Elasticsearch Client used: 7.6.2", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T08:30:17.981Z", "log.level": "INFO", "message":"Version Elasticsearch cluster: 7.9.0", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T08:30:17.981Z", "log.level": "WARN", "message":"Version mismatch in between Elasticsearch Client and Cluster: 7.6.2 - 7.9.0", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T08:30:18.204Z", "log.level": "INFO", "message":"Started OpentelemetryDemoApplicationTests in 7.171 seconds (JVM running for 11.697)", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T08:30:19.115Z", "log.level": "INFO", "message":"Shutting down ExecutorService 'applicationTaskExecutor'", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"SpringContextShutdownHook","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-11-12T08:55:13.656Z", "log.level": "INFO", "message":"Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests], using SpringBootContextLoader", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T08:55:13.687Z", "log.level": "INFO", "message":"Could not detect default resource locations for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.test.context.support.AbstractContextLoader"}
{"@timestamp":"2020-11-12T08:55:13.690Z", "log.level": "INFO", "message":"Could not detect default configuration classes for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests]: OpentelemetryDemoApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils"}
{"@timestamp":"2020-11-12T08:55:14.038Z", "log.level": "INFO", "message":"Found @SpringBootConfiguration com.itergo.Opentelemetry_demo.OpentelemetryDemoApplication for test class com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T08:55:14.350Z", "log.level": "INFO", "message":"Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T08:55:14.393Z", "log.level": "INFO", "message":"Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@57b75756, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5327a06e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2679311f, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@287f7811, org.springframework.test.context.support.DirtiesContextTestExecutionListener@451f87af, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2b556bb2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@44cb460e, org.springframework.test.context.event.EventPublishingTestExecutionListener@17271176, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2e3cdec2, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2e34384c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3051e0b2, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1f52eb6f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@57d0fc89, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@58294867]", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T08:55:15.062Z", "log.level": "INFO", "message":"Starting OpentelemetryDemoApplicationTests on LAPTOP-3TNF8G3D with PID 12244 (started by Woobin in C:\\Users\\Woobin Lee\\Desktop\\opentelemetry\\Opentelemetry_demo)", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T08:55:15.150Z", "log.level": "INFO", "message":"No active profile set, falling back to default profiles: default", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T08:55:16.595Z", "log.level": "INFO", "message":"Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T08:55:16.643Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 36ms. Found 0 Elasticsearch repository interfaces.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T08:55:16.658Z", "log.level": "INFO", "message":"Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T08:55:16.664Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 5ms. Found 0 Reactive Elasticsearch repository interfaces.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T08:55:18.415Z", "log.level": "INFO", "message":"Initializing ExecutorService 'applicationTaskExecutor'", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-11-12T08:55:21.132Z", "log.level": "WARN", "message":"Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T08:55:21.133Z", "log.level": "WARN", "message":"Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T08:55:21.134Z", "log.level": "WARN", "message":"Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T08:55:21.136Z", "log.level": "WARN", "message":"Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T08:55:21.559Z", "log.level": "INFO", "message":"Version Spring Data Elasticsearch: 4.0.4.RELEASE", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T08:55:21.559Z", "log.level": "INFO", "message":"Version Elasticsearch Client in build: 7.6.2", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T08:55:21.560Z", "log.level": "INFO", "message":"Version Elasticsearch Client used: 7.6.2", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T08:55:21.560Z", "log.level": "INFO", "message":"Version Elasticsearch cluster: 7.9.0", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T08:55:21.561Z", "log.level": "WARN", "message":"Version mismatch in between Elasticsearch Client and Cluster: 7.6.2 - 7.9.0", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T08:55:21.790Z", "log.level": "INFO", "message":"Started OpentelemetryDemoApplicationTests in 7.294 seconds (JVM running for 11.779)", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T08:55:23.079Z", "log.level": "INFO", "message":"Shutting down ExecutorService 'applicationTaskExecutor'", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"SpringContextShutdownHook","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-11-12T12:02:40.508Z", "log.level": "INFO", "message":"Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests], using SpringBootContextLoader", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T12:02:40.532Z", "log.level": "INFO", "message":"Could not detect default resource locations for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.test.context.support.AbstractContextLoader"}
{"@timestamp":"2020-11-12T12:02:40.534Z", "log.level": "INFO", "message":"Could not detect default configuration classes for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests]: OpentelemetryDemoApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils"}
{"@timestamp":"2020-11-12T12:02:40.827Z", "log.level": "INFO", "message":"Found @SpringBootConfiguration com.itergo.Opentelemetry_demo.OpentelemetryDemoApplication for test class com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T12:02:41.241Z", "log.level": "INFO", "message":"Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T12:02:41.314Z", "log.level": "INFO", "message":"Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@57b75756, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5327a06e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2679311f, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@287f7811, org.springframework.test.context.support.DirtiesContextTestExecutionListener@451f87af, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2b556bb2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@44cb460e, org.springframework.test.context.event.EventPublishingTestExecutionListener@17271176, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2e3cdec2, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2e34384c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3051e0b2, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1f52eb6f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@57d0fc89, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@58294867]", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T12:02:41.974Z", "log.level": "INFO", "message":"Starting OpentelemetryDemoApplicationTests on LAPTOP-3TNF8G3D with PID 27292 (started by Woobin in C:\\Users\\Woobin Lee\\Desktop\\opentelemetry\\Opentelemetry_demo)", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T12:02:42.069Z", "log.level": "INFO", "message":"No active profile set, falling back to default profiles: default", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T12:02:43.510Z", "log.level": "INFO", "message":"Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T12:02:43.555Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 35ms. Found 0 Elasticsearch repository interfaces.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T12:02:43.567Z", "log.level": "INFO", "message":"Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T12:02:43.574Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 7ms. Found 0 Reactive Elasticsearch repository interfaces.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T12:02:45.416Z", "log.level": "INFO", "message":"Initializing ExecutorService 'applicationTaskExecutor'", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-11-12T12:02:48.098Z", "log.level": "WARN", "message":"Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T12:02:48.100Z", "log.level": "WARN", "message":"Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T12:02:48.101Z", "log.level": "WARN", "message":"Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T12:02:48.102Z", "log.level": "WARN", "message":"Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T12:02:48.578Z", "log.level": "INFO", "message":"Version Spring Data Elasticsearch: 4.0.4.RELEASE", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T12:02:48.579Z", "log.level": "INFO", "message":"Version Elasticsearch Client in build: 7.6.2", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T12:02:48.579Z", "log.level": "INFO", "message":"Version Elasticsearch Client used: 7.6.2", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T12:02:48.580Z", "log.level": "INFO", "message":"Version Elasticsearch cluster: 7.9.0", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T12:02:48.581Z", "log.level": "WARN", "message":"Version mismatch in between Elasticsearch Client and Cluster: 7.6.2 - 7.9.0", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T12:02:48.829Z", "log.level": "INFO", "message":"Started OpentelemetryDemoApplicationTests in 7.415 seconds (JVM running for 11.9)", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T12:02:50.038Z", "log.level": "INFO", "message":"Shutting down ExecutorService 'applicationTaskExecutor'", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"SpringContextShutdownHook","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-11-12T12:03:50.723Z", "log.level": "INFO", "message":"Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests], using SpringBootContextLoader", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T12:03:50.758Z", "log.level": "INFO", "message":"Could not detect default resource locations for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.test.context.support.AbstractContextLoader"}
{"@timestamp":"2020-11-12T12:03:50.760Z", "log.level": "INFO", "message":"Could not detect default configuration classes for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests]: OpentelemetryDemoApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils"}
{"@timestamp":"2020-11-12T12:03:51.212Z", "log.level": "INFO", "message":"Found @SpringBootConfiguration com.itergo.Opentelemetry_demo.OpentelemetryDemoApplication for test class com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T12:03:51.524Z", "log.level": "INFO", "message":"Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T12:03:51.568Z", "log.level": "INFO", "message":"Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@57b75756, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5327a06e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2679311f, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@287f7811, org.springframework.test.context.support.DirtiesContextTestExecutionListener@451f87af, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2b556bb2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@44cb460e, org.springframework.test.context.event.EventPublishingTestExecutionListener@17271176, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2e3cdec2, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2e34384c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3051e0b2, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1f52eb6f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@57d0fc89, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@58294867]", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T12:03:52.169Z", "log.level": "INFO", "message":"Starting OpentelemetryDemoApplicationTests on LAPTOP-3TNF8G3D with PID 15016 (started by Woobin in C:\\Users\\Woobin Lee\\Desktop\\opentelemetry\\Opentelemetry_demo)", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T12:03:52.239Z", "log.level": "INFO", "message":"No active profile set, falling back to default profiles: default", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T12:03:53.690Z", "log.level": "INFO", "message":"Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T12:03:53.738Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 38ms. Found 0 Elasticsearch repository interfaces.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T12:03:53.751Z", "log.level": "INFO", "message":"Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T12:03:53.759Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 6ms. Found 0 Reactive Elasticsearch repository interfaces.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T12:03:55.615Z", "log.level": "INFO", "message":"Initializing ExecutorService 'applicationTaskExecutor'", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-11-12T12:03:58.235Z", "log.level": "WARN", "message":"Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T12:03:58.236Z", "log.level": "WARN", "message":"Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T12:03:58.237Z", "log.level": "WARN", "message":"Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T12:03:58.238Z", "log.level": "WARN", "message":"Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T12:03:58.630Z", "log.level": "INFO", "message":"Version Spring Data Elasticsearch: 4.0.4.RELEASE", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T12:03:58.630Z", "log.level": "INFO", "message":"Version Elasticsearch Client in build: 7.6.2", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T12:03:58.631Z", "log.level": "INFO", "message":"Version Elasticsearch Client used: 7.6.2", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T12:03:58.631Z", "log.level": "INFO", "message":"Version Elasticsearch cluster: 7.9.0", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T12:03:58.632Z", "log.level": "WARN", "message":"Version mismatch in between Elasticsearch Client and Cluster: 7.6.2 - 7.9.0", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T12:03:58.883Z", "log.level": "INFO", "message":"Started OpentelemetryDemoApplicationTests in 7.218 seconds (JVM running for 11.845)", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T12:04:00.108Z", "log.level": "INFO", "message":"Shutting down ExecutorService 'applicationTaskExecutor'", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"SpringContextShutdownHook","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-11-12T12:08:22.539Z", "log.level": "INFO", "message":"Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests], using SpringBootContextLoader", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T12:08:22.577Z", "log.level": "INFO", "message":"Could not detect default resource locations for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.test.context.support.AbstractContextLoader"}
{"@timestamp":"2020-11-12T12:08:22.579Z", "log.level": "INFO", "message":"Could not detect default configuration classes for test class [com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests]: OpentelemetryDemoApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.test.context.support.AnnotationConfigContextLoaderUtils"}
{"@timestamp":"2020-11-12T12:08:22.891Z", "log.level": "INFO", "message":"Found @SpringBootConfiguration com.itergo.Opentelemetry_demo.OpentelemetryDemoApplication for test class com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T12:08:23.160Z", "log.level": "INFO", "message":"Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T12:08:23.207Z", "log.level": "INFO", "message":"Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@57b75756, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5327a06e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2679311f, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@287f7811, org.springframework.test.context.support.DirtiesContextTestExecutionListener@451f87af, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2b556bb2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@44cb460e, org.springframework.test.context.event.EventPublishingTestExecutionListener@17271176, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2e3cdec2, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2e34384c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3051e0b2, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1f52eb6f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@57d0fc89, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@58294867]", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.boot.test.context.SpringBootTestContextBootstrapper"}
{"@timestamp":"2020-11-12T12:08:23.816Z", "log.level": "INFO", "message":"Starting OpentelemetryDemoApplicationTests on LAPTOP-3TNF8G3D with PID 12244 (started by Woobin in C:\\Users\\Woobin Lee\\Desktop\\opentelemetry\\Opentelemetry_demo)", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T12:08:23.892Z", "log.level": "INFO", "message":"No active profile set, falling back to default profiles: default", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T12:08:25.284Z", "log.level": "INFO", "message":"Bootstrapping Spring Data Elasticsearch repositories in DEFAULT mode.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T12:08:25.327Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 34ms. Found 0 Elasticsearch repository interfaces.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T12:08:25.339Z", "log.level": "INFO", "message":"Bootstrapping Spring Data Reactive Elasticsearch repositories in DEFAULT mode.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T12:08:25.345Z", "log.level": "INFO", "message":"Finished Spring Data repository scanning in 4ms. Found 0 Reactive Elasticsearch repository interfaces.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
{"@timestamp":"2020-11-12T12:08:27.191Z", "log.level": "INFO", "message":"Initializing ExecutorService 'applicationTaskExecutor'", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
{"@timestamp":"2020-11-12T12:08:29.849Z", "log.level": "WARN", "message":"Registering converter from class org.springframework.data.geo.Point to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T12:08:29.850Z", "log.level": "WARN", "message":"Registering converter from interface java.util.Map to class org.springframework.data.geo.Point as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T12:08:29.850Z", "log.level": "WARN", "message":"Registering converter from class org.springframework.data.elasticsearch.core.geo.GeoPoint to interface java.util.Map as writing converter although it doesn't convert to a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T12:08:29.851Z", "log.level": "WARN", "message":"Registering converter from interface java.util.Map to class org.springframework.data.elasticsearch.core.geo.GeoPoint as reading converter although it doesn't convert from a store-supported type! You might want to check your annotation setup at the converter implementation.", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.convert.CustomConversions"}
{"@timestamp":"2020-11-12T12:08:30.286Z", "log.level": "INFO", "message":"Version Spring Data Elasticsearch: 4.0.4.RELEASE", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T12:08:30.288Z", "log.level": "INFO", "message":"Version Elasticsearch Client in build: 7.6.2", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T12:08:30.289Z", "log.level": "INFO", "message":"Version Elasticsearch Client used: 7.6.2", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T12:08:30.290Z", "log.level": "INFO", "message":"Version Elasticsearch cluster: 7.9.0", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T12:08:30.290Z", "log.level": "WARN", "message":"Version mismatch in between Elasticsearch Client and Cluster: 7.6.2 - 7.9.0", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"org.springframework.data.elasticsearch.support.VersionInfo"}
{"@timestamp":"2020-11-12T12:08:30.508Z", "log.level": "INFO", "message":"Started OpentelemetryDemoApplicationTests in 7.227 seconds (JVM running for 11.611)", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"main","log.logger":"com.itergo.Opentelemetry_demo.OpentelemetryDemoApplicationTests"}
{"@timestamp":"2020-11-12T12:08:31.670Z", "log.level": "INFO", "message":"Shutting down ExecutorService 'applicationTaskExecutor'", "service.name":"Opentelemetry_demo","event.dataset":"Opentelemetry_demo.log","process.thread.name":"SpringContextShutdownHook","log.logger":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"}
